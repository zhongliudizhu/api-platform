package ws.server;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.11
 * 2017-06-23T15:48:30.575+08:00
 * Generated source version: 3.1.11
 * 
 */
@WebService(targetNamespace = "http://server.ws", name = "SvcServicePortType")
@XmlSeeAlso({ObjectFactory.class, ws.object.ObjectFactory.class})
public interface SvcServicePortType {

    @WebMethod
    @RequestWrapper(localName = "transX", targetNamespace = "http://server.ws", className = "ws.server.TransX")
    @ResponseWrapper(localName = "transXResponse", targetNamespace = "http://server.ws", className = "ws.server.TransXResponse")
    @WebResult(name = "out", targetNamespace = "http://server.ws")
    public ws.object.SvcInfo transX(
            @WebParam(name = "in0", targetNamespace = "http://server.ws")
            ws.object.SvcInfo in0
    );

    @WebMethod
    @RequestWrapper(localName = "searchTrans", targetNamespace = "http://server.ws", className = "ws.server.SearchTrans")
    @ResponseWrapper(localName = "searchTransResponse", targetNamespace = "http://server.ws", className = "ws.server.SearchTransResponse")
    @WebResult(name = "out", targetNamespace = "http://server.ws")
    public ws.object.SvcResp searchTrans(
            @WebParam(name = "in0", targetNamespace = "http://server.ws")
            ws.object.TransReq in0
    );

    @WebMethod
    @RequestWrapper(localName = "searchMchInfo", targetNamespace = "http://server.ws", className = "ws.server.SearchMchInfo")
    @ResponseWrapper(localName = "searchMchInfoResponse", targetNamespace = "http://server.ws", className = "ws.server.SearchMchInfoResponse")
    @WebResult(name = "out", targetNamespace = "http://server.ws")
    public ws.object.SvcResp searchMchInfo(
            @WebParam(name = "in0", targetNamespace = "http://server.ws")
            ws.object.TransReq in0
    );
}
